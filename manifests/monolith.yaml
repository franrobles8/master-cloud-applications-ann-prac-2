apiVersion: apps/v1
kind: Deployment
metadata:
  name: monolith-deployment
  labels:
    app: monolith
spec:
  replicas: 1
  selector:
    matchLabels:
      app: monolith
  template:
    metadata:
      labels:
        app: monolith
    spec:
      containers:
      - name: monolith
        image: franrobles8/monolith:0.0.1
        ports:
        - containerPort: 8080
        env:
        - name: DEPLOY_TYPE
          value: "microservice" # microservice | monolith
        - name: SERVICE_USERS_URL
          value: "http://service-users-service:8081"
        - name: DB_URL
          value: "jdbc:mysql://db:3306/test"
        - name: DB_USER
          value: "root"
        - name: DB_PASS
          value: "pass"
---
kind: Service
apiVersion: v1
metadata:
  # Unique key of the Service instance
  name: service-monolith
  labels:
    app: monolith
spec:
  ports:
    # Accept traffic sent to port 8080
    - name: http-monolith
      port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    # Loadbalance traffic across Pods matching
    # this label selector
    app: monolith
  # Create an HA proxy in the cloud provider
  # with an External IP address - *Only supported
  # by some cloud providers*
  type: ClusterIP